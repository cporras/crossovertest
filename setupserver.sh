#/bin/bash
#This script is meant to run on a Ubuntu 14.04 VM on Amazon EC2
#The default mysql and icingaadmin passwords are 'password'. To use other values edit setdebconfselections.sh

#Icinga install and config
sudo apt-get install -y debconf-utils
sudo add-apt-repository ppa:formorer/icinga
sudo apt update
chmod a+x $(pwd)/setdebconfselections.sh
sh $(pwd)/setdebconfselections.sh
sudo DEBIAN_FRONTEND="noninteractive" apt install -y icinga icinga-doc icinga-idoutils mysql-server libdbd-mysql mysql-client
sudo usermod -a -G nagios www-data
echo -e 'ICINGACFG="/etc/icinga/icinga.cfg" \nCGICFG="/etc/icinga/cgi.cfg" \nNICENESS=5 \nIDO2DB=yes' | sudo tee /etc/default/icinga
sudo service ido2db start
sudo cp /usr/share/doc/icinga-idoutils/examples/idoutils.cfg-sample /etc/icinga/modules/idoutils.cfg
sudo service icinga restart
echo '<meta http-equiv="refresh" content="0; url=/icinga" />'  | sudo tee /var/www/html/index.html

#Docker install
sudo apt-get install apt-transport-https ca-certificates
sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
echo deb https://apt.dockerproject.org/repo ubuntu-trusty main  | sudo tee --append  /etc/apt/sources.list.d/docker.list
sudo apt-get update
sudo apt-get -y install docker-engine
sudo usermod -aG docker $USER

#The Dockerfile for the apache web server is in my github (https://github.com/cporras/dockerhttpd)
#The image is generated by a docker 'Automated Build' rule (https://hub.docker.com/r/cporras/httpd/)
sudo docker run -dit -p 8080:80 --name apache cporras/httpd
#The MySQL docker container is defined in the same way as the apache container
sudo docker run -p 43306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=password -d cporras/mysql

#Log backup configuration
mkdir ~/backups
mkdir ~/scripts
cp $(pwd)/logbackup.sh  ~/scripts/logbackup.sh
chmod a+x ~/scripts/logbackup.sh
echo "0 19 * * * ubuntu /home/ubuntu/scripts/logbackup.sh" > newcrontab
crontab newcrontab
rm newcrontab

#AWS Utils are needed by  logbackup.sh
sudo apt-get -y install awscli
echo "Please run 'aws configure' to setup your AWS credentials for the S3 bucket where the logs are going to be stored"
echo "Please edit ~/scripts/logbackup.sh with the name of your S3 bucket"
